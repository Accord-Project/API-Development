openapi: 3.0.1
info:
  title: ACCORD Results API
  description: |-
    This is the Results API proposed as part of the ACCORD project version: '1.0.0'. It is designed to be implemented by compliance checking microservices to allow interface between the ACCORD cloud architecture and the compliance checking microservices.
  version: "1"
servers:
- url: /api/v1/
paths:
  /:
    get:
      summary: Retrieves the basic metadata about the compliance checking microservice
      description: Retrieves the basic metadata about the compliance checking microservice and its capabilities.
      operationId: GET-v1
      responses:
        "200":
          description: Retrieves the basic metadata about the compliance checking microservice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
    put:
      summary: Initiates a Compliance Check on the Microservice
      description: Initiates a Compliance Check on the Microservice
      operationId: PUT-v1
      security:
        - auth: []
      requestBody:
        description: The parameters to initiate the compliance check. Calling services should either specify a check name (with comparator and desiredValue) or simply the document URL. If no check name is given a microservice should, if capable, attempt to parse and execute all checks within the given BuildingCode.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckCreate'
        required: true
      responses:
        "200":
          description: Returns the Check ID of the initiated Check
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckID'
        "501":
          description: The microservice cannot implement the requested check.
  /{CheckId}/status:
    get:
      summary: Returns the status of a CheckId
      operationId: GET-v1-status
      security:
        - auth: []
      parameters:
      - name: CheckId
        in: path
        description: The CheckId
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Returns the Check status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckStatus'
        "404":
          description: If the CheckId does not exist.
  /{CheckId}/result:
    get:
      summary: Returns the results of a CheckId
      operationId: GET-v1-status
      security:
        - auth: []
      parameters:
      - name: CheckId
        in: path
        description: The CheckId
        required: true
        schema:
          type: string
          format: uuid
      - name: Accept-Language
        in: header
        type: string
        description: The requested language of the response (taken from ISO 639) defaults to EN.
      responses:
        "200":
          description: Returns the results of the compliance check. Either in BCF (version 3.0, 2.1, 2.0 or 1.0) or JSON.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseJSON'
            application/x-bcf ;version=3.0:
              name: BCFV3.0
            application/x-bcf ;version=2.1:
              name: BCFv2.1
            application/x-bcf ;version=2.0:
              name: BCFv2.0
            application/x-bcf ;version=1.0:
              name: BCFv1.0
        "503":
          description: If the compliance check is not yet complete
        "404":
          description: If the CheckId does not exist.
components:
  schemas:
    ResponseJSON:
      required:
        - check
        - results
      type: object
      properties:
        check:
          type: string
          description: The name of the check being executed
        supportingFileContentType:
          type: string
          description: The MIME Content Type of the supporting file data (if present)
        results:
          type: array
          description: A list of responses, one item for every object that was requested to be checked upon Check creation
          items:
            type: object
            required:
              - entityId
              - answer
            properties:
              entityId:
                description: The entity Id to which this response is relevant
                type: string
              answer:
                description: The response
                type: string
                enum:
                  - true
                  - false
                  - unknown
              missValue:
                description: This is an indication, if the response is false, how far out of tolerance the response is.
                type: string
              supportingFileData:
                description: BASE64 Encoded data that supports/evidences this answer
                type: string
      description: A response from a microservice
    CheckCreate:
      type: object
      required:
        - modelUrl
        - entityIds
        - buildingCodeReference
      properties:
        entityIds:
          type: array
          description: The set of entity Ids to perform the given compliance check on.
          items:
            type: string
        check:
          type: string
          description: The name of the given compliance check being requested.
        comparator:          
          type: string
          description: The comparator used to determine if a specific individual check has passed
          enum:
            - "!="
            - "=="
            - ">="
            - "<="
            - "<"
            - ">"
        desiredValue:
          type: string
          description: The desired value for the result of the compliance check.
        unit:
          type: string
          description: The unit of desiredValue. If absent the microservice will assume either unitless or a standard SI Unit.
        buildingCodeReference:
          type: string
          description: The URL to a building code hosted on an endpoint compatible with the Building Codes and Regulations API
        additionalData:
          type: string
          description: Any additional data required by the microservice for execution
        modelUrl:
          type: string
          description: A URL to retrieve the target model for this check
        webhookUrl:
          type: string
          description: A Webhook URL that the microservice can call to signify this check is complete.
    CheckID:
      type: object
      required:
        - CheckId
      properties:
        CheckId:
          type: string
          format: uuid
    CheckStatus:
      type: object
      required:
        - complete
      properties:
        complete:
          type: bool
    Identity:
      type: object
      properties:
        name:
          type: string
          description: The name of this compliance checking microservice
        description:
          type: string
          description: A description of this compliance checking microservice
        operator:
          type: string
          description: The name of the organisation operating this compliance checking microservice
        capabilities:
          type: array
          description: A list of the capabilities of the compliance checking microservice
          items:
            $ref: '#/components/schemas/CapabilitiesIndex'
      description: Represents the basic metadata of the server, including an index of its capabilities
    CapabilitiesIndex:
      type: object
      properties:
        check:
          type: string
          description: The name of a compliance check that this microservice is capable of performing
        entityTypes:
          type: array
          items:
            type: string
          description: A list of entity types i.e. IfcDoor to which the described check can be applied
        documentReferences:
          type: array
          items:
            type: string
          description: A list of URLs to Building Codes to which the described check can be applied
  securitySchemes:
    auth:
      type: ApiKeyAuth
      description: An API key to authorize that it is a component of the ACCORD cloud architecture making the API call.
      in: header